	DROP TABLE IF EXISTS CONTACT CASCADE;
DROP TABLE IF EXISTS PERSON CASCADE;

DROP FUNCTION IF EXISTS AN_HOUR_BEFORE(TIMESTAMP);

CREATE TABLE PERSON (
  ID BIGSERIAL,
  FIRST_NAME VARCHAR(100) NOT NULL,
  LAST_NAME VARCHAR(100) NOT NULL,
  DATE_OF_BIRTH DATE,
  GENDER VARCHAR(1) NOT NULL,
  SSN VARCHAR(100)
);

ALTER TABLE PERSON ADD CONSTRAINT PK_PERSON
	PRIMARY KEY (ID);

ALTER TABLE PERSON ADD CONSTRAINT CHECK_PERSON_GENDER
    CHECK (GENDER IN ('M', 'F', '0'))
;

CREATE  INDEX IX_PERSON_LAST_NAME ON PERSON (LAST_NAME);

CREATE TABLE CONTACT (
  ID BIGSERIAL,
  PERSON_ID BIGSERIAL NOT NULL,
  CTYPE INT NOT NULL,
  ADDRESS VARCHAR(100),
  PHONE_NUMBER VARCHAR(100)
);

ALTER TABLE CONTACT ADD CONSTRAINT PK_CONTACT
	PRIMARY KEY (ID);

ALTER TABLE CONTACT ADD CONSTRAINT FK_CONTACT_PERSON
	FOREIGN KEY (PERSON_ID) REFERENCES PERSON (ID) ON DELETE CASCADE;

ALTER TABLE CONTACT ADD CONSTRAINT CHECK_CONTACT_TYPE
    CHECK (CTYPE IN (0, 1, 2))
;

CREATE OR REPLACE FUNCTION AN_HOUR_BEFORE(T TIMESTAMP) RETURNS TIMESTAMP
LANGUAGE SQL
AS $$
  SELECT $1 - interval '1 HOUR'
$$;

CREATE OR REPLACE FUNCTION NEW_PERSON(OUT newid BIGINT, IN date_of_birth DATE, IN ssn VARCHAR(20), IN first_name VARCHAR(100), IN last_name VARCHAR(100), IN gender VARCHAR(1))
LANGUAGE plpgsql
AS $$
  BEGIN
    INSERT INTO PERSON VALUES (DEFAULT, first_name, last_name, date_of_birth, gender, ssn);
    newid := currval('person_id_seq');
  END;
$$;

CREATE OR REPLACE FUNCTION NEW_PERSON_RET_RS(IN date_of_birth DATE, IN ssn VARCHAR(20), IN first_name VARCHAR(100), IN last_name VARCHAR(100), IN gender VARCHAR(1)) RETURNS REFCURSOR
LANGUAGE plpgsql
AS $$
  DECLARE
    result REFCURSOR;
  BEGIN
    INSERT INTO PERSON VALUES (DEFAULT, first_name, last_name, date_of_birth, gender, ssn);
    OPEN result FOR SELECT * FROM PERSON WHERE ID = currval('person_id_seq');
    RETURN result;
  END;
$$;

