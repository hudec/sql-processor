DROP SEQUENCE SIMPLE_SEQUENCE;
DROP TABLE CONTACT CASCADE;
DROP TABLE PERSON CASCADE;
DROP PROCEDURE NEW_PERSON;
DROP FUNCTION NEW_PERSON_RET_RS;
DROP FUNCTION AN_HOUR_BEFORE;

CREATE SEQUENCE SIMPLE_SEQUENCE INCREMENT BY 1 START WITH 100;

CREATE TABLE PERSON
(
  ID BIGSERIAL PRIMARY KEY
, FIRST_NAME VARCHAR(100) NOT NULL 
, LAST_NAME VARCHAR(100) NOT NULL 
, DATE_OF_BIRTH DATE
, GENDER VARCHAR(1) NOT NULL CHECK (GENDER IN ('M', 'F'))
, SSN VARCHAR(100) 
);

CREATE  INDEX IX_PERSON_LAST_NAME ON PERSON (LAST_NAME);

CREATE TABLE CONTACT
(
  ID SERIAL PRIMARY KEY
, PERSON_ID BIGINT NOT NULL 
, ADDRESS VARCHAR(100) NOT NULL 
, TYPE INTEGER CHECK (TYPE IN (0, 1))
, PHONE_NUMBER VARCHAR(100)
);

ALTER TABLE CONTACT ADD CONSTRAINT
	FOREIGN KEY (PERSON_ID) REFERENCES PERSON (ID) ON DELETE CASCADE
	CONSTRAINT FK_CONTACT_PERSON
;

CREATE PROCEDURE NEW_PERSON(OUT newid INTEGER, date_of_birth DATE, ssn VARCHAR(20), first_name VARCHAR(100), last_name VARCHAR(100), gender VARCHAR(1));
  INSERT INTO PERSON (DATE_OF_BIRTH, SSN, FIRST_NAME, LAST_NAME, GENDER) 
    VALUES (date_of_birth, ssn, first_name, last_name, gender);
  SELECT FIRST 1 dbinfo('bigserial') INTO newid FROM systables;
END PROCEDURE;

CREATE FUNCTION NEW_PERSON_RET_RS(date_of_birth DATE, ssn VARCHAR(20), first_name VARCHAR(100), last_name VARCHAR(100), gender VARCHAR(1))
    RETURNING INTEGER AS id, DATE AS date_of_birth, VARCHAR (100) AS ssn, 
              VARCHAR(100) AS first_name, VARCHAR(100) AS last_name, VARCHAR(1) AS gender
  DEFINE IDr INTEGER;
  DEFINE DATE_OF_BIRTHr DATE;
  DEFINE SSNr, FIRST_NAMEr, LAST_NAMEr VARCHAR(100);
  DEFINE GENDERr VARCHAR(100);
  DEFINE temp_id INTEGER;
  INSERT INTO PERSON (DATE_OF_BIRTH, SSN, FIRST_NAME, LAST_NAME, GENDER)
    VALUES (date_of_birth, ssn, first_name, last_name, gender);
  SELECT FIRST 1 dbinfo('bigserial') INTO temp_id FROM systables;
  SELECT ID, DATE_OF_BIRTH, SSN, FIRST_NAME, LAST_NAME, GENDER
    INTO IDr, DATE_OF_BIRTHr, SSNr, FIRST_NAMEr, LAST_NAMEr, GENDERr
    FROM PERSON WHERE ID = temp_id;
  RETURN IDr, DATE_OF_BIRTHr, SSNr, FIRST_NAMEr, LAST_NAMEr, GENDERr;
END FUNCTION;

CREATE FUNCTION AN_HOUR_BEFORE(t DATETIME YEAR TO FRACTION) RETURNING DATETIME YEAR TO FRACTION
  RETURN (t - INTERVAL (1) HOUR TO HOUR);
END FUNCTION;
