package org.sample.model.auth {

  import org.hibernate.validator.constraints.NotBlank
  import javax.validation.constraints.NotNull
  import com.fasterxml.jackson.databind.annotation.JsonDeserialize
  import com.fasterxml.jackson.databind.annotation.JsonSerialize
  import ch.ralscha.extdirectspring.generator.ModelAssociation
  import org.sample.web.util.DMYDateTimeDeserializer
  import ch.ralscha.extdirectspring.generator.ModelField
  import ch.ralscha.extdirectspring.generator.Model
  import org.sample.web.util.DMYDateTimeSerializer
  import javax.validation.constraints.Past
  import com.fasterxml.jackson.annotation.JsonIgnore
  import ch.ralscha.extdirectspring.generator.ModelAssociationType

  @Model ::: value "SimpleWeb.model.AuthRole", paging true, readMethod "simpleService.loadAuthRoles"
  @@@JsonIgnore
  @@@@JsonIgnore
  pojo AuthRole serializable 1 operators {
    id : java.lang.Long primaryKey index 1
    @NotBlank
    name : java.lang.String required
    description : java.lang.String
    @NotNull
    version : java.lang.Integer optLock
    equals ::: id
    hashCode ::: id
    toInit :::
    isDef ::: description
    toString ::: id description name version
  }

  @Model ::: value "SimpleWeb.model.AuthUser", paging true, readMethod "simpleService.loadAuthUsers"
  @@@JsonIgnore
  @@@@JsonIgnore
  pojo AuthUser serializable 1 operators {
    id : java.lang.Long primaryKey index 1
    @NotBlank
    username : java.lang.String required index 2
    password : java.lang.String
    @NotBlank
    name : java.lang.String required
    email : java.lang.String
    @ModelField ::: dateFormat "d.m.Y H:i:s"
    @Past
    @@JsonSerialize ::: using :DMYDateTimeSerializer class
    @@@JsonDeserialize ::: using :DMYDateTimeDeserializer class
    lastLogin : java.util.Date
    @NotNull
    version : java.lang.Integer optLock
    @ModelAssociation ::: value :ModelAssociationType HAS_MANY, model ::UserRole class
    userRoles : java.util.List <:UserRole>
    equals ::: id
    hashCode ::: id
    toInit ::: userRoles
    isDef ::: lastLogin email password
    toString ::: id lastLogin username email name password version
  }

  @Model ::: value "SimpleWeb.model.UserRole", paging true, readMethod "simpleService.loadUserRoles"
  @@@JsonIgnore
  @@@@JsonIgnore
  pojo UserRole serializable 1 operators {
    id : java.lang.Long primaryKey index 1
    authUserId : java.lang.Long required index 4
    @ModelAssociation ::: value :ModelAssociationType HAS_ONE, model ::AuthRole class
    authRole :: AuthRole required index 5
    version : java.lang.Integer optLock
    equals ::: id
    hashCode ::: id
    toInit ::: authRole
    isDef :::
    toString ::: id authUserId authRole version
  }

  pojo UserSession serializable 1 operators {
    id : java.lang.Long primaryKey index 1
    authUserId : java.lang.Long required index 3
    lastAccess : java.util.Date required
    equals ::: id
    hashCode ::: id
    toInit :::
    isDef :::
    toString ::: id authUserId lastAccess
  }
}